#!/bin/bash

# Script to install the ansible commands on a clean Debian machine.
# Uses the Docker-Ansible image. Assumes Docker is already installed.
# Should be idempotent and suitable for use from Ansible.

# return value:
#     0 if success
#     1 if error
#     3 if nothing changed

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. "$DIR/bash.conf"

GETPATH="${BINDIR}/ansible-getpath"
RVAL=3

function showusage {
cat <<EOF >&2

NAME
   install - Script to install the ansible commands.
   
SYNOPSIS
   install PATH

DESCRIPTION
   Installs ansible scripts (e.g. ansible-playbook) to ${BINDIR}.
   PATH is mounted in the Docker container to run commands within.
   (Only PATH is accessible to ansible!)
   
RETURN VALUE
   0   - success
   1   - error
   
EOF
   exit 1  
}

# check we're root on Debian and Docker is installed
if [ "$EUID" -ne 0 ]; then 
  echo "Please run as root"
  exit 1
fi
if [ $(uname -rv | grep -c "Debian") -eq 0 ]; then
  echo "This script is only for Debian hosts."
  exit 1
fi
if ! command_exists docker ; then 
  echo "Docker needs to be installed first."
  exit 1
fi
if [ $# -ne 1 ]; then showusage ; fi
SRCPATH="$1"
if [ ! -d "${SRCPATH}" ]; then echo "Path ${SRCPATH} does not exist." ; exit 1 ; fi

# create a command which is run via docker
# translates pwd to suitable path in docker container under /data.
# could run through all arguments and translate paths there too....
function makefile {
  if [ ! -e "${BINDIR}/${1}" ]; then
    cat <<EOF | tr -s ' ' >"${BINDIR}/$1"
#!/bin/bash

# This script was installed as part of docker-ansible.
# More info here:
#   https://github.com/j842/docker-ansible

# determine where pwd is in terms of the ansible container
ANSIBLE_PATH="${SRCPATH}"
ANSIBLE_VCMD="\${ANSIBLE_PATH}:${ANSIBLE_MOUNT}"
ANSIBLE_DIR=\$(${GETPATH} ${SRCPATH})
if [ \$? -ne 0 ]; then exit 1 ; fi

# run the command in the container
docker run --name=${1} -ti                           \
       -v "${VOLUME_VCMD}" -v "\${ANSIBLE_VCMD}"         \
       ${CONTAINER_NAME} ${BINDIR}/ansiblerun \${ANSIBLE_DIR} ${1} \$@
docker rm ${1}  > /dev/null
EOF
    chmod a+x ${BINDIR}/"$1"
    echo "Created ${BINDIR}/$1"
    RVAL=0
fi 
}

# ------------ CONFIGURE ANSIBLE CONTAINER --------------------------

# put supporting script (ansible-getpath) in usr/local/bin
if [ ! -e "${GETPATH}" ]; then
  cp ${DIR}/support/ansible-getpath "${GETPATH}"
  chmod a+x "${GETPATH}"
fi

# configure those ansible commands
COMMANDS=(ansible ansible-doc ansible-galaxy ansible-playbook ansible-pull ansible-vault)
for CMD in "${COMMANDS[@]}"; do
  makefile $CMD
done

# get the latest docker image, set RVAL if changed.
echo "Checking we have latest Docker-Ansible image..."
if [ $(docker pull "${CONTAINER_NAME}" | grep -c "Image is up to date") -eq 0 ]; then
  RVAL=0
fi

#------------------------

exit ${RVAL}
