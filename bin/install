#!/bin/bash

# Script to install the ansible commands on a clean Debian machine.
# Uses the Docker-Ansible image. Assumes Docker is already installed.
# Should be idempotent and suitable for use from Ansible.

# return value:
#     0 if success
#     1 if error
#     3 if nothing changed

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. "$DIR/bash.conf"

if [ -z $1 ]; then 
   SCRIPTNAME="ansiblesession"
else
   SCRIPTNAME="ansiblesession-${1}"
fi
RVAL=3

function showusage {
cat <<EOF >&2

NAME
   install - Script to install ansiblesession
   
SYNOPSIS
   install [NAME]

DESCRIPTION
   Installs ansiblesession to ${BINDIR}. NAME allows multiple named
   installations on one host.
   
RETURN VALUE
   0   - success
   1   - error
   
EOF
   exit 1  
}

# copy the script from $1 to $2 if it's different.
function cpscript {
   SSOURCE="$1"
   STARGET="$2"
   diff "$SSOURCE" "$STARGET" >/dev/null 2>&1
   if [ $? -ne 0 ]; then 
      cp "$SSOURCE" "$STARGET"
      chmod a+x "$STARGET"
      echo "Created $STARGET"
      RVAL=0
   fi
}

# create a command which is run via docker
# translates pwd to suitable path in docker container under /data.
# could run through all arguments and translate paths there too....
function createansiblesession {
  cat <<EOF >"/tmp/${SCRIPTNAME}"
#!/bin/bash

# This script was installed as part of docker-ansible.
# More info here:
#   https://github.com/j842/docker-ansible

function showusage {
   echo " "
   echo "NAME"
   echo "   $SCRIPTNAME - begin an ansible session"
   echo " "
   echo "SYNOPSIS"
   echo " "
   echo "   $SCRIPTNAME"
   echo " "
   echo "DESCRIPTION"
   echo "   Begins an ansible session."
   echo " "
   
   exit 1
}

ANSIBLE_VCMD="\${ANSIBLE_PATH}:${ANSIBLE_MOUNT}"

# determine where pwd is in terms of the ansible container
ANSIBLE_CDIR=\$(${GETPATH} "\$ANSIBLE_PATH")
if [ \$? -ne 0 ]; then exit 1 ; fi

# run the command in the container
docker run --name=ansiblesession -h "\${HOSTNAME}-ansible" -ti  \\
       -v "${VOLUME_VCMD}" -v "\${ANSIBLE_VCMD}"                \\
       ${CONTAINER_NAME} ${BINDIR}/ansiblerun "\${ANSIBLE_CDIR}"
docker rm ansiblesession  > /dev/null
EOF

   cpscript "/tmp/${SCRIPTNAME}" "${BINDIR}/${SCRIPTNAME}"
}


# check we're root on Debian and Docker is installed
if [ "$EUID" -ne 0 ]; then 
  echo "Please run as root" >&2
  exit 1
fi
if [ $(uname -rv | grep -c "Debian") -eq 0 ]; then
  echo "This script is only for Debian hosts." >&2
  exit 1
fi
if ! command_exists docker ; then 
  echo "Docker needs to be installed first." >&2
  exit 1
fi
if [ $# -gt 1 ]; then showusage ; fi


# ------------ CONFIGURE ANSIBLE CONTAINER --------------------------

# create ansiblesession.
createansiblesession

#------------------------

exit ${RVAL}
